<!DOCTYPE html>
<html lang="it">
<head>
  <meta charset="UTF-8">
  <title>Tracker Acquisti</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="manifest" href="manifest.json">
  <link rel="icon" href="icon-192.png">
  <meta name="theme-color" content="#ffffff">
  <!-- Aggiungiamo Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body { font-family: Arial; padding: 20px; }
    input, button { margin: 5px; padding: 5px; }
    .item { display: flex; align-items: center; margin: 5px 0; }
    .item.completed span { text-decoration: line-through; color: gray; }
    .item span { margin-right: 10px; }
    .item button { margin-left: auto; }
    .best-price { font-weight: bold; color: green; }
    .offerta { color: red; font-weight: bold; }
    canvas { max-width: 100%; margin-top: 20px; }
  </style>
</head>
<body>
  <h1>Tracker Acquisti</h1>
  <input type="text" id="nome" placeholder="Nome acquisto">
  <input type="text" id="negozio" placeholder="Negozio">
  <input type="number" id="prezzo" placeholder="Prezzo">
  <label for="offerta">In Offerta</label>
  <input type="checkbox" id="offerta">
  <input type="text" id="categoria" placeholder="Categoria del prodotto">
  <button onclick="aggiungiAcquisto()">Aggiungi</button>

  <h2>Lista Acquisti</h2>
  <div id="lista"></div>

  <h3>Totale Speso: <span id="totale">0.00</span> €</h3>

  <h2>Grafico delle Spese per Categoria</h2>
  <canvas id="graficoSpese" width="400" height="200"></canvas>

  <h2>Esporta CSV</h2>
  <button onclick="esportaCSV()">Esporta CSV</button>
  <a id="downloadLink" style="display: none;" href="#" download="acquisti.csv">
    <button>Scarica CSV</button>
  </a>

  <script>
    let acquisti = JSON.parse(localStorage.getItem('acquisti')) || [];
    let prezziMigliori = JSON.parse(localStorage.getItem('prezziMigliori')) || [];

    function salva() {
      localStorage.setItem('acquisti', JSON.stringify(acquisti));
      localStorage.setItem('prezziMigliori', JSON.stringify(prezziMigliori));
    }

    function aggiungiAcquisto() {
      const nome = document.getElementById('nome').value;
      const negozio = document.getElementById('negozio').value;
      const prezzo = parseFloat(document.getElementById('prezzo').value);
      const inOfferta = document.getElementById('offerta').checked;
      const categoria = document.getElementById('categoria').value;
      const data = new Date().toISOString().split('T')[0]; // Data in formato "YYYY-MM-DD"
      if (!nome || isNaN(prezzo)) return;

      acquisti.push({ nome, negozio, prezzo, categoria, completato: false, data, inOfferta });
      salva();
      aggiornaLista();
      aggiornaGrafico();  // Aggiorna il grafico delle spese
      document.getElementById('nome').value = '';
      document.getElementById('negozio').value = '';
      document.getElementById('prezzo').value = '';
      document.getElementById('offerta').checked = false;
      document.getElementById('categoria').value = '';
    }

    function aggiornaLista() {
      const listaDiv = document.getElementById('lista');
      listaDiv.innerHTML = '';
      let totale = 0;

      acquisti.forEach((item, index) => {
        const div = document.createElement('div');
        div.className = 'item';
        div.innerHTML = `
          <span>${item.nome} (${item.negozio}) - ${item.prezzo.toFixed(2)} € - ${item.data} 
          ${item.inOfferta ? '<span class="offerta">(In Offerta)</span>' : ''}</span>
        `;
        listaDiv.appendChild(div);
        totale += item.prezzo;
      });
      document.getElementById('totale').innerText = totale.toFixed(2);
    }

    function aggiornaGrafico() {
      const categorie = {}; // Oggetto per contare la spesa per categoria

      acquisti.forEach(item => {
        if (!categorie[item.categoria]) {
          categorie[item.categoria] = 0;
        }
        categorie[item.categoria] += item.prezzo;
      });

      const categorieNomi = Object.keys(categorie);
      const speseCategorie = Object.values(categorie);

      const ctx = document.getElementById('graficoSpese').getContext('2d');
      const grafico = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: categorieNomi, // Etichette delle categorie
          datasets: [{
            label: 'Totale Speso per Categoria (€)',
            data: speseCategorie, // Dati delle spese per categoria
            backgroundColor: 'rgba(75, 192, 192, 0.2)',
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    }

    function esportaCSV() {
      const righe = [['Nome', 'Negozio', 'Prezzo', 'Completato', 'Data', 'Categoria', 'In Offerta']];
      acquisti.forEach(item => {
        righe.push([item.nome, item.negozio, item.prezzo.toFixed(2), item.completato ? 'Sì' : 'No', item.data, item.categoria, item.inOfferta ? 'Sì' : 'No']);
      });

      const totaleSpeso = acquisti.reduce((acc, item) => acc + item.prezzo, 0).toFixed(2);
      
      // Aggiungi la riga del totale speso
      righe.push(['Totale Speso', '', totaleSpeso + ' €', '', '', '', '']);

      const oggi = new Date();
      const mese = oggi.getMonth() + 1;
      const anno = oggi.getFullYear();
      const dataFormato = `${anno}-${mese < 10 ? '0' + mese : mese}`;

      const nomeFile = `acquisti_${dataFormato}.csv`;

      const contenuto = righe.map(r => r.join(';')).join('\n');
      const blob = new Blob([contenuto], { type: 'text/csv;charset=utf-8;' });

      const url = URL.createObjectURL(blob);
      const downloadLink = document.getElementById('downloadLink');
      downloadLink.href = url;
      downloadLink.setAttribute('download', nomeFile);
      downloadLink.style.display = 'block';
    }

    aggiornaLista();
    aggiornaGrafico(); // Visualizza il grafico delle spese all'inizio
  </script>
</body>
</html>
